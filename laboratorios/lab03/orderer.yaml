apiVersion: v1
kind: Service
metadata:
  name: orderer-svc
  labels:
    app: orderer
spec:
  selector:
    app: orderer
  type: NodePort
  ports:
  - port: 7050
    nodePort: 31050
    protocol: TCP
    targetPort: 7050
    name: porta1
---
apiVersion: v1
kind: Service
metadata:
  name: orderer1
  labels:
    app: orderer
spec:
  selector:
    app: orderer
    or_instance: "1"
  type: NodePort
  ports:
  - port: 7050
    protocol: TCP
    targetPort: 7050
    nodePort: 31750
    name: porta1
  - port: 9443
    protocol: TCP
    targetPort: 9443
    nodePort: 32443
    name: metric
---
apiVersion: v1
kind: Service
metadata:
  name: orderer2
  labels:
    app: orderer
spec:
  selector:
    app: orderer
    or_instance: "2"
  type: NodePort
  ports:
  - port: 7050
    protocol: TCP
    targetPort: 7050
    nodePort: 31850
    name: porta1
  - port: 9443
    protocol: TCP
    targetPort: 9443
    nodePort: 32444
    name: metric
---
apiVersion: v1
kind: Service
metadata:
  name: orderer3
  labels:
    app: orderer
spec:
  selector:
    app: orderer
    or_instance: "3"
  type: NodePort
  ports:
  - port: 7050
    protocol: TCP
    targetPort: 7050
    nodePort: 31950
    name: porta1
  - port: 9443
    protocol: TCP
    targetPort: 9443
    nodePort: 32445
    name: metric

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: orderer-pod1
  labels:
    app: orderer
spec:
  serviceName: orderer1
  replicas: 1
  selector:
    matchLabels:
      app: orderer
  template:
    metadata:
      labels:
        app: orderer
        or_instance: "1"
    spec:
      volumes:
      - name: nfs-cert
        hostPath:
           path: /blockchain/order01
      containers:
      - name: orderer
        image: hyperledger/fabric-orderer:1.4.0
        ports:
        - containerPort: 7054
        - containerPort: 9443
        env:
        - name: FABRIC_LOGGING_SPEC
          value: "INFO"
        - name: LICENSE
          value: "accept"
        - name: GODEBUG
          value: "netdns=go"
        - name: ORDERER_GENERAL_LOGLEVEL
          value: "INFO"
        - name: ORDERER_GENERAL_LISTENADDRESS
          value: "0.0.0.0"
        - name: ORDERER_GENERAL_GENESISMETHOD
          value: "file"
        - name: ORDERER_GENERAL_GENESISFILE
          value: "/etc/hyperledger/config/genesis.block"
        - name: ORDERER_GENERAL_LOCALMSPID
          value: "OrdererMSP"
        - name: ORDERER_GENERAL_LOCALMSPDIR
          value: "/etc/hyperledger/config/msp"
        - name: ORDERER_GENERAL_TLS_ENABLED
          value: "true"
        - name: ORDERER_GENERAL_TLS_PRIVATEKEY
          value: "/etc/hyperledger/config/tls/server.key"
        - name: ORDERER_GENERAL_TLS_CERTIFICATE
          value: "/etc/hyperledger/config/tls/server.crt"
        - name: ORDERER_GENERAL_TLS_ROOTCAS
          value: "[/etc/hyperledger/config/tls/ca.crt]"
        - name: ORDERER_KAFKA_RETRY_SHORTINTERVAL
          value: "1s"
        - name: ORDERER_KAFKA_RETRY_SHORTTOTAL
          value: "30s"
        - name: ORDERER_KAFKA_VERBOSE
          value: "true"
        - name: CONFIGTX_ORDERER_KAFKA_BROKERS
          value: "[kafka1:9092, kafka2:9092, kafka3:9092]"
#        - name: ORDERER_GENERAL_SYSTEMCHANNEL
#          value: "scd-deviceid"
        - name: ORDERER_GENERAL_GENESISPROFILE
          value: "ModeKafkaOrderer"
        - name: ORDERER_OPERATIONS_LISTENADDRESS
          value: "0.0.0.0:9443"
        - name: ORDERER_METRICS_PROVIDER
          value: "prometheus"
        volumeMounts:
        - name: nfs-cert
          mountPath: /etc/hyperledger/config
        command: ["orderer"]
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: orderer-pod2
  labels:
    app: orderer
spec:
  serviceName: orderer2
  replicas: 1
  selector:
    matchLabels:
      app: orderer
  template:
    metadata:
      labels:
        app: orderer
        or_instance: "2"
    spec:
      volumes:
      - name: nfs-cert
        hostPath:
           path: /blockchain/order02
      containers:
      - name: orderer
        image: hyperledger/fabric-orderer:1.4.0
        ports:
        - containerPort: 7054
        - containerPort: 9443
        env:
        - name: FABRIC_LOGGING_SPEC
          value: "INFO"
        - name: GODEBUG
          value: "netdns=go"
        - name: LICENSE
          value: "accept"
        - name: ORDERER_GENERAL_LOGLEVEL
          value: "INFO"
        - name: ORDERER_GENERAL_LISTENADDRESS
          value: "0.0.0.0"
        - name: ORDERER_GENERAL_GENESISMETHOD
          value: "file"
        - name: ORDERER_GENERAL_GENESISFILE
          value: "/etc/hyperledger/config/genesis.block"
        - name: ORDERER_GENERAL_LOCALMSPID
          value: "OrdererMSP"
        - name: ORDERER_GENERAL_LOCALMSPDIR
          value: "/etc/hyperledger/config/msp"
        - name: ORDERER_GENERAL_TLS_ENABLED
          value: "true"
        - name: ORDERER_GENERAL_TLS_PRIVATEKEY
          value: "/etc/hyperledger/config/tls/server.key"
        - name: ORDERER_GENERAL_TLS_CERTIFICATE
          value: "/etc/hyperledger/config/tls/server.crt"
        - name: ORDERER_GENERAL_TLS_ROOTCAS
          value: "[/etc/hyperledger/config/tls/ca.crt]"
        - name: ORDERER_KAFKA_RETRY_SHORTINTERVAL
          value: "1s"
        - name: ORDERER_KAFKA_RETRY_SHORTTOTAL
          value: "30s"
        - name: ORDERER_KAFKA_VERBOSE
          value: "true"
        - name: CONFIGTX_ORDERER_KAFKA_BROKERS
          value: "[kafka1:9092, kafka2:9092, kafka3:9092]"
#        - name: ORDERER_GENERAL_SYSTEMCHANNEL
#          value: "scd-deviceid"
        - name: ORDERER_GENERAL_GENESISPROFILE
          value: "ModeKafkaOrderer"
        - name: ORDERER_OPERATIONS_LISTENADDRESS
          value: "0.0.0.0:9443"
        - name: ORDERER_METRICS_PROVIDER
          value: "prometheus"
        volumeMounts:
        - name: nfs-cert
          mountPath: /etc/hyperledger/config
        command: ["orderer"]
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: orderer-pod3
  labels:
    app: orderer
spec:
  serviceName: orderer3
  replicas: 1
  selector:
    matchLabels:
      app: orderer
  template:
    metadata:
      labels:
        app: orderer
        or_instance: "3"
    spec:
      volumes:
      - name: nfs-cert
        hostPath:
           path: /blockchain/order03
      containers:
      - name: orderer
        image: hyperledger/fabric-orderer:1.4.0
        ports:
        - containerPort: 7054
        - containerPort: 9443
        env:
        - name: FABRIC_LOGGING_SPEC
          value: "INFO"
        - name: LICENSE
          value: "accept"
        - name: GODEBUG
          value: "netdns=go"
        - name: ORDERER_GENERAL_LOGLEVEL
          value: "INFO"
        - name: ORDERER_GENERAL_LISTENADDRESS
          value: "0.0.0.0"
        - name: ORDERER_GENERAL_GENESISMETHOD
          value: "file"
        - name: ORDERER_GENERAL_GENESISFILE
          value: "/etc/hyperledger/config/genesis.block"
        - name: ORDERER_GENERAL_LOCALMSPID
          value: "OrdererMSP"
        - name: ORDERER_GENERAL_LOCALMSPDIR
          value: "/etc/hyperledger/config/msp"
        - name: ORDERER_GENERAL_TLS_ENABLED
          value: "true"
        - name: ORDERER_GENERAL_TLS_PRIVATEKEY
          value: "/etc/hyperledger/config/tls/server.key"
        - name: ORDERER_GENERAL_TLS_CERTIFICATE
          value: "/etc/hyperledger/config/tls/server.crt"
        - name: ORDERER_GENERAL_TLS_ROOTCAS
          value: "[/etc/hyperledger/config/tls/ca.crt]"
        - name: ORDERER_KAFKA_RETRY_SHORTINTERVAL
          value: "1s"
        - name: ORDERER_KAFKA_RETRY_SHORTTOTAL
          value: "30s"
        - name: ORDERER_KAFKA_VERBOSE
          value: "true"
        - name: CONFIGTX_ORDERER_KAFKA_BROKERS
          value: "[kafka1:9092, kafka2:9092, kafka3:9092]"
#        - name: ORDERER_GENERAL_SYSTEMCHANNEL
#          value: "scd-deviceid"
#        - name: ORDERER_GENERAL_GENESISPROFILE
#          value: "ModeKafkaOrderer"
        - name: ORDERER_OPERATIONS_LISTENADDRESS
          value: "0.0.0.0:9443"
        - name: ORDERER_METRICS_PROVIDER
          value: "prometheus"

        volumeMounts:
        - name: nfs-cert
          mountPath: /etc/hyperledger/config
        command: ["orderer"]
